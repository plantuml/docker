name: Build container image

on:
  workflow_call:
    inputs:
      container:
        required: true
        type: string
      publish:
        required: true
        type: boolean
      plantuml_version:
        required: true
        type: string
      plantuml_tag:
        required: true
        type: string

permissions:
  contents: read
  packages: write

env:
  CONTAINER_NAME: ${{ inputs.container }}
  CONTAINER_DESCRIPTION: ${{ inputs.container }} container for PlantUML
  RELEASE_TAG_PREFIX: ${{ inputs.container }}-v
  GHCR_USERNAME: ${{ github.actor }}
  GHCR_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  TEST_TAG: ${{ inputs.container }}:test
  PLANTUML_VERSION: ${{ inputs.plantuml_version }}
  PLANTUML_TAG: ${{ inputs.plantuml_tag }}

jobs:
  build-container-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}/${{ inputs.container }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
          labels: |
            org.opencontainers.image.title=${{ inputs.container }}
            org.opencontainers.image.description=${{ inputs.container }} container for PlantUML version ${{ inputs.plantuml_version }}
            org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}/tree/main/${{ inputs.container }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}/tree/main/${{ inputs.container }}

      - name: Login to ghcr.io registry
        if: ${{ contains(inputs.publish, true) }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USERNAME }}
          password: ${{ env.GHCR_PASSWORD }}

      - name: Build locally
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.container }}
          load: true
          tags: ${{ env.TEST_TAG }}
          build-args: |
            PLANTUML_TAG=${{ inputs.plantuml_tag }}
            PLANTUML_VERSION=${{ inputs.plantuml_version }}

      - name: Test container image
        run: |
          docker run --rm --entrypoint /bin/bash ${{ env.TEST_TAG }} container-test.sh

      - name: Push container image
        if: ${{ contains(inputs.publish, true) }}
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.container }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PLANTUML_TAG=${{ inputs.plantuml_tag }}
            PLANTUML_VERSION=${{ inputs.plantuml_version }}

      - name: Summary
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          LABELS: ${{ steps.meta.outputs.labels }}
          PUBLISHED: ${{ inputs.publish }}
          CONTAINER: ${{ inputs.container }}
          PLANTUML_TAG: ${{ inputs.plantuml_tag }}
          PLANTUML_VERSION: ${{ inputs.plantuml_version }}
        run: |
          echo "## Summary:" >> $GITHUB_STEP_SUMMARY
          echo "Container: $CONTAINER" >> $GITHUB_STEP_SUMMARY
          echo "Published: $PUBLISHED" >> $GITHUB_STEP_SUMMARY

          echo "### PlantUML version" >> $GITHUB_STEP_SUMMARY
          echo "$PLANTUML_VERSION" >> $GITHUB_STEP_SUMMARY
          echo "### PlantUML tag" >> $GITHUB_STEP_SUMMARY
          echo "$PLANTUML_TAG" >> $GITHUB_STEP_SUMMARY

          echo "### Tags" >> $GITHUB_STEP_SUMMARY
          echo "$TAGS" >> $GITHUB_STEP_SUMMARY

          echo "### Labels" >> $GITHUB_STEP_SUMMARY
          echo "$LABELS" >> $GITHUB_STEP_SUMMARY
